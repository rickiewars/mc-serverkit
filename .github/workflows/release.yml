name: Release

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          21,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        # os: [ubuntu-22.04, windows-latest]
        os: [ ubuntu-22.04 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/loom-cache
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Verify release version
        run: ./gradlew verifyTagMatchesVersion -Ptag=${{ github.event.release.tag_name }}
      - name: Build
        run: ./gradlew build
      - name: Upload GitHub release
        uses: AButler/upload-release-assets@v3.0
        with:
          files: build/libs/mc-serverkit-${{ github.event.release.tag_name }}.jar
          repo-token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Extract Minecraft version
#        id: extract_mc
#        run: |
#          TAG="${{ github.event.release.tag_name }}"
#          MC_VERSION="${TAG#*+}"  # strips everything before the +
#          echo "mc_version=$MC_VERSION" >> "$GITHUB_OUTPUT"
#      - name: Upload to Modrinth
#        uses: cloudnode-pro/modrinth-publish@v2
#        with:
#          token: ${{ secrets.MODRINTH_TOKEN }}
#          project: fsywSq9M
#          name: ${{ github.event.release.name }}
#          version: ${{ github.event.release.tag_name }}
#          changelog: ${{ github.event.release.body }}
#          loaders: fabric
#          game-versions: ${{ steps.extract_mc.outputs.mc_version }}
#          files: build/libs/mc-serverkit-${{ github.event.release.tag_name }}.jar